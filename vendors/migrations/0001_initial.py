# Generated by Django 5.2.5 on 2025-09-02 11:38

import cloudinary.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business_profile_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('image', cloudinary.models.CloudinaryField(default='logo.jpg', max_length=255, verbose_name='logo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModifierGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Business_profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Store Name')),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='logo')),
                ('kvk_number', models.CharField(max_length=50, unique=True, verbose_name='KVK Number')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('address', models.TextField(verbose_name='Store Address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.business_profile_category')),
            ],
        ),
        migrations.CreateModel(
            name='Create_Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='deal_image')),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Percentage or fixed amount', max_digits=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('redemption_type', models.CharField(choices=[('DELIVERY', 'Delivery'), ('PICKUP', 'Pickup'), ('BOTH', 'Delivery & Pickup')], max_length=20)),
                ('max_coupons_total', models.PositiveIntegerField(verbose_name='Max Coupons For This Deal')),
                ('max_coupons_per_customer', models.PositiveIntegerField(default=1, verbose_name='Max Coupons Per Customer')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='vendors.business_profile')),
                ('linked_menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='vendors.deal')),
            ],
        ),
        migrations.AddField(
            model_name='deal',
            name='modifier_groups',
            field=models.ManyToManyField(related_name='deals', to='vendors.modifiergroup'),
        ),
        migrations.AddField(
            model_name='deal',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='vendors.vendor_category'),
        ),
        migrations.CreateModel(
            name='DeliveryCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_code', models.CharField(max_length=20)),
                ('delivery_fee', models.DecimalField(decimal_places=2, max_digits=6)),
                ('min_order_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_costs', to='vendors.deal')),
            ],
            options={
                'unique_together': {('deal', 'zip_code')},
            },
        ),
    ]
