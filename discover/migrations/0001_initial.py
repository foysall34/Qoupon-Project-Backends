# Generated by Django 5.2.5 on 2025-09-01 04:45

import cloudinary.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CoffeeSubscriptionOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Pret Coffee Subscription', max_length=100)),
                ('description', models.TextField(default='All your organic coffees (and teas, frappes, hot chocolates...)')),
                ('price_details', models.CharField(default='for Â£20 a month', max_length=100)),
                ('offer_details', models.CharField(default='and your first month FREE', max_length=100)),
                ('website_url', models.URLField(default='http://PretCoffeeSub.co.uk')),
                ('is_active', models.BooleanField(default=True)),
                ('expiry_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptionChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('selected_title', models.CharField(default='write title', max_length=200)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_selected', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery_type', models.CharField(choices=[('PICKUP', 'Pickup'), ('DELIVERY', 'Delivery')], default='DELIVERY', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Menu Categories',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calories', models.PositiveIntegerField(blank=True, null=True)),
                ('image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('added_to_cart', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='discover.menucategory')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='discover.cart')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discover.menuitem')),
                ('selected_options', models.ManyToManyField(blank=True, to='discover.optionchoice')),
            ],
        ),
        migrations.CreateModel(
            name='OptionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('is_required', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option_title', to='discover.menuitem')),
            ],
        ),
        migrations.AddField(
            model_name='optionchoice',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='discover.optiongroup'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('product_name', models.CharField(max_length=255)),
                ('product_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('order_type', models.CharField(choices=[('delivery', 'Delivery'), ('pickup', 'Pickup')], default='delivery', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='image')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3)),
                ('review_count', models.IntegerField()),
                ('distance_km', models.DecimalField(decimal_places=1, max_digits=4)),
                ('tags', models.CharField(help_text='Comma-separated tags e.g., Vegan, Gezond, Pizza', max_length=255)),
                ('discount_percentage', models.IntegerField(default=0)),
                ('average_price', models.DecimalField(blank=True, decimal_places=2, help_text='Average price for one person', max_digits=6, null=True)),
                ('cuisines', models.ManyToManyField(related_name='restaurants', to='discover.cuisine')),
                ('diets', models.ManyToManyField(related_name='restaurants', to='discover.diet')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('valid_until', models.DateTimeField()),
                ('discount_percentage', models.IntegerField()),
                ('redemption_methods', models.CharField(help_text='e.g., Delivery & Pickup', max_length=100)),
                ('delivery_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('min_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('favorited_by', models.ManyToManyField(blank=True, related_name='favorite_offers', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='discover.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='VendorFollowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='title', max_length=200, null=True)),
                ('logo', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('category', models.CharField(max_length=100)),
                ('descriptions', models.CharField(max_length=200)),
                ('expiry_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_followed', models.BooleanField(default=False)),
                ('menu_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='discover.menucategory')),
            ],
        ),
    ]
